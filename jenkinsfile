pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
  }

  stages {
    stage('Git Checkout') {
        steps {
            sh "mkdir -p $JENKINS_HOME/infra"
            dir ("$JENKINS_HOME/infra"){
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/natan-dias/webserver-example.git']]])
            }
        }
    }

    stage('Create/Refresh ArgoCD app') {
        steps {
            dir ("$JENKINS_HOME/infra/argocd"){
                //sh "kubectl apply -k overlays/dev/"
                sh "kubectl apply -f webserver-example-app-kustomize.yml"
            }
        }
    }

    stage('Copy SRC') {
        steps {
            script{
            sh (label: 'kubectl', script: ''' 
            kubectl exec -n nginx deployment/nginx -- bash -c "rm -rf /usr/share/nginx/html/*"
            kubectl exec -n nginx deployment/nginx -- bash -c "cd /usr/share/nginx/html/ && git clone https://github.com/natan-dias/webserver-example-src.git ."
            ''')
            }
        }
    }
  }
}