pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
  }

  stages {
    stage('Git Checkout') {
        steps {
            sh "mkdir -p $JENKINS_HOME/infra"
            dir ("$JENKINS_HOME/infra"){
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/natan-dias/webserver-example.git']]])
            }
        }
    }

    stage('Apply Namespace') {
        steps {
            dir ("$JENKINS_HOME/infra/k8s-manifests"){
                sh "kubectl apply -f namespace.yml"
            }
        }
    }

    stage('Create storage') {
        steps {
            dir ("$JENKINS_HOME/infra/k8s-manifests"){
                sh (label: 'storage', script: ''' 
                kubectl get pvc -n nginx --field-selector=metadata.name=nginx-claim -o jsonpath='{.items[0].spec.volumeName}' \\
                && echo "Storage already exists. Skipping..." \\
                || kubectl apply -f storage.yml ''')
            }
        }
    }

    stage('Create Service and Deployment'){
        steps {
            dir ("$JENKINS_HOME/infra/k8s-manifests"){
                sh "kubectl apply -f service.yml && kubectl apply -f deployment.yml"
            }
        }
    }


    stage('Copy SRC') {
        steps {
            script{
            sh (label: 'kubectl', script: ''' 
            kubectl exec -n nginx deployment/nginx -- bash -c "cd /tmp && git clone https://github.com/natan-dias/webserver-example.git"
            kubectl exec -n nginx deployment/nginx -- bash -c "rm -rf /usr/share/nginx/html/*"
            kubectl exec -n nginx deployment/nginx -- bash -c "mv /tmp/webserver-example/src/* /usr/share/nginx/html && rm -rf /tmp/*"
            ''')
            }
        }

    }

  }
}